/*
 * Copyright (C) 2013 SolidRun ltd.
 * Based on sabresd board from Freescale Semiconductor, Inc. All Rights Reserved
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.

 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */

#ifndef _BOARD_MX6DL_SABRESD_H
#define _BOARD_MX6DL_SABRESD_H
#include <mach/iomux-mx6dl.h>
#define MX6DL_ENET_PAD_CTRL_PD (PAD_CTL_PKE | PAD_CTL_PUE  |		\
		PAD_CTL_PUS_100K_DOWN | PAD_CTL_SPEED_MED |		\
		PAD_CTL_DSE_40ohm   | PAD_CTL_HYS)

static iomux_v3_cfg_t mx6dl_c1_pads[] = {
	/* WiFi 11n and BlueTooth */
	MX6DL_PAD_GPIO_8__ANATOP_ANATOP_32K_OUT,
	MX6DL_PAD_DISP0_DAT23__GPIO_5_17,		/* WL_RST_IN */
	MX6DL_PAD_DISP0_DAT10__GPIO_4_31,		/* WL_GPIO_0 */
	MX6DL_PAD_DISP0_DAT18__GPIO_5_12,		/* WL_GPIO_1 */
	MX6DL_PAD_EIM_D19__GPIO_3_19,		/* WL_BT_REG_ON */
	MX6DL_PAD_DISP0_DAT19__GPIO_5_13,	/* XTAL power up */
	MX6DL_PAD_NANDF_CS3__GPIO_6_16,		/* BT_RST_N */
	MX6DL_PAD_NANDF_ALE__GPIO_6_8,		/* BT_GPIO_0 */
	MX6DL_PAD_NANDF_CLE__GPIO_6_7,		/* BT_GPIO_1 */

	/* AUD5 for BRCM WiFi/BT/FM */
	MX6DL_PAD_KEY_COL0__AUDMUX_AUD5_TXC,
	MX6DL_PAD_KEY_ROW0__AUDMUX_AUD5_TXD,
	MX6DL_PAD_KEY_COL1__AUDMUX_AUD5_TXFS,
	MX6DL_PAD_KEY_ROW1__AUDMUX_AUD5_RXD,

	/* USDHC1 - Connected to BRCM Wifi/BT/FM */
	MX6DL_PAD_SD1_CLK__USDHC1_CLK_50MHZ_40OHM,
	MX6DL_PAD_SD1_CMD__USDHC1_CMD_50MHZ_40OHM,
	MX6DL_PAD_SD1_DAT0__USDHC1_DAT0_50MHZ_40OHM,
	MX6DL_PAD_SD1_DAT1__USDHC1_DAT1_50MHZ_40OHM,
	MX6DL_PAD_SD1_DAT2__USDHC1_DAT2_50MHZ_40OHM,
	MX6DL_PAD_SD1_DAT3__USDHC1_DAT3_50MHZ_40OHM,

	/* UART4 for BRCM WiFi/BT/FM */
	MX6DL_PAD_CSI0_DAT12__UART4_TXD,
	MX6DL_PAD_CSI0_DAT13__UART4_RXD,
	MX6DL_PAD_CSI0_DAT17__UART4_CTS,
	MX6DL_PAD_CSI0_DAT16__UART4_RTS,

	/* SPDIF out */
	MX6DL_PAD_GPIO_17__SPDIF_OUT1,
	/* CAN1  */
	MX6DL_PAD_KEY_ROW2__CAN1_RXCAN,
	MX6DL_PAD_GPIO_7__CAN1_TXCAN,

	/* CCM  */
	MX6DL_PAD_GPIO_5__CCM_CLKO,		/* SGTL500 sys_mclk */
	MX6DL_PAD_NANDF_CS2__CCM_CLKO2,		/* MIPI CSI clock */

	/* ECSPI2 */
	MX6DL_PAD_EIM_CS0__ECSPI2_SCLK,
	MX6DL_PAD_EIM_CS1__ECSPI2_MOSI,
	MX6DL_PAD_EIM_OE__ECSPI2_MISO,
	MX6DL_PAD_EIM_RW__ECSPI2_SS0,
	MX6DL_PAD_EIM_LBA__ECSPI2_SS1,

	/* I2C1 */
	MX6DL_PAD_EIM_D21__I2C1_SCL,
	MX6DL_PAD_EIM_D28__I2C1_SDA,

	/* I2C2 */
	MX6DL_PAD_KEY_COL3__I2C2_SCL,
	MX6DL_PAD_KEY_ROW3__I2C2_SDA,

	/* I2C3 */
	MX6DL_PAD_EIM_D17__I2C3_SCL,
	MX6DL_PAD_EIM_D18__I2C3_SDA,

	/* PWM */
	MX6DL_PAD_DISP0_DAT8__PWM1_PWMO,
	MX6DL_PAD_DISP0_DAT9__PWM2_PWMO,
	MX6DL_PAD_SD4_DAT1__PWM3_PWMO,
	MX6DL_PAD_SD4_DAT2__PWM4_PWMO,

	/* UART1 for debug */
	MX6DL_PAD_CSI0_DAT10__UART1_TXD,
	MX6DL_PAD_CSI0_DAT11__UART1_RXD,

	/* UART2 RX, TX, CTS and RTS */
	MX6DL_PAD_SD4_DAT4__UART2_RXD,
	MX6DL_PAD_SD4_DAT5__UART2_RTS,
	MX6DL_PAD_SD4_DAT6__UART2_CTS,
	MX6DL_PAD_SD4_DAT7__UART2_TXD,

	/* USBOTG ID pin */
	IOMUX_PAD(0x05E0, 0x0210, 3, 0x0790, 1, PAD_CTL_PKE | PAD_CTL_PUE | \
		PAD_CTL_PUS_100K_DOWN | PAD_CTL_SPEED_LOW |	\
		PAD_CTL_DSE_80ohm | PAD_CTL_SRE_FAST | PAD_CTL_HYS),
	/*
	 * Originally MX6Q_PAD_GPIO_1__USBOTG_ID, but we want it to be
	 * pulled down ID pin for fixed host connection.
	 */

	/* USB power enable pins */
	MX6DL_PAD_EIM_D22__GPIO_3_22,
	MX6DL_PAD_GPIO_0__GPIO_1_0,

	/* USB OC pin */
	MX6DL_PAD_KEY_COL4__USBOH3_USBOTG_OC,
	MX6DL_PAD_GPIO_3__USBOH3_USBH1_OC,

	/* USDHC2 */
	MX6DL_PAD_SD2_CLK__USDHC2_CLK,
	MX6DL_PAD_SD2_CMD__USDHC2_CMD,
	MX6DL_PAD_SD2_DAT0__USDHC2_DAT0,
	MX6DL_PAD_SD2_DAT1__USDHC2_DAT1,
	MX6DL_PAD_SD2_DAT2__USDHC2_DAT2,
	MX6DL_PAD_SD2_DAT3__USDHC2_DAT3,
	MX6DL_PAD_GPIO_4__USDHC2_CD,		/* SD2_CD */
	MX6DL_PAD_GPIO_2__USDHC2_WP,		/* SD2_WP */

	/* USDHC3 */
	MX6Q_PAD_SD3_CLK__USDHC3_CLK_50MHZ,
	MX6DL_PAD_SD3_CMD__USDHC3_CMD_50MHZ,
	MX6DL_PAD_SD3_DAT0__USDHC3_DAT0_50MHZ,
	MX6DL_PAD_SD3_DAT1__USDHC3_DAT1_50MHZ,
	MX6DL_PAD_SD3_DAT2__USDHC3_DAT2_50MHZ,
	MX6DL_PAD_SD3_DAT3__USDHC3_DAT3_50MHZ,
	MX6DL_PAD_SD3_DAT4__USDHC3_DAT4_50MHZ,
	MX6DL_PAD_SD3_DAT5__USDHC3_DAT5_50MHZ,
	MX6DL_PAD_SD3_DAT6__USDHC3_DAT6_50MHZ,
	MX6DL_PAD_SD3_DAT7__USDHC3_DAT7_50MHZ,
//	TODO - FIXME? MX6Q_PAD_NANDF_D0__GPIO_2_0,		/* SD3_CD */
//	MX6Q_PAD_NANDF_D1__GPIO_2_1,		/* SD3_WP */
	MX6DL_PAD_SD3_RST__USDHC3_RST,		/* SD3_RST */
	MX6DL_PAD_GPIO_18__USDHC3_VSELECT,	/* SD3_VSELECT */

	/* USDHC4 */
	MX6DL_PAD_SD4_CLK__USDHC4_CLK_50MHZ,
	MX6DL_PAD_SD4_CMD__USDHC4_CMD_50MHZ,
	MX6DL_PAD_SD4_DAT0__USDHC4_DAT0_50MHZ,
	MX6DL_PAD_SD4_DAT1__USDHC4_DAT1_50MHZ,
	MX6DL_PAD_SD4_DAT2__USDHC4_DAT2_50MHZ,
	MX6DL_PAD_SD4_DAT3__USDHC4_DAT3_50MHZ,
	MX6DL_PAD_SD4_DAT4__USDHC4_DAT4_50MHZ,
	MX6DL_PAD_SD4_DAT5__USDHC4_DAT5_50MHZ,
	MX6DL_PAD_SD4_DAT6__USDHC4_DAT6_50MHZ,
	MX6DL_PAD_SD4_DAT7__USDHC4_DAT7_50MHZ,

	/* IR in */
	MX6DL_PAD_GPIO_2__GPIO_1_2,
	/* MX6DL_PAD_EIM_DA9__GPIO_3_9 on CuBox-i */
};

static iomux_v3_cfg_t mx6dl_ar8030_phy[] = {
	/* ENET */
	MX6DL_PAD_ENET_MDIO__ENET_MDIO,
	MX6DL_PAD_ENET_MDC__ENET_MDC,
	IOMUX_PAD(0x0650, 0x0268, 5, 0x0000, 0, MX6DL_ENET_PAD_CTRL_PD), /* KEY_ROW4 reset signal */
	
	MX6DL_PAD_DI0_PIN2__GPIO_4_18, /* Interrupt */
	/* RMII */
	IOMUX_PAD(0x05B4, 0x01E4, 1, 0x0828, 0, PAD_CTL_PKE | PAD_CTL_PUE  |
		  PAD_CTL_PUS_100K_DOWN), /* MX6DL_PAD_ENET_CRS_DV__ENET_RX_EN */
	IOMUX_PAD(0x05C8, 0x01F8, 1, 0x0818, 0, PAD_CTL_PKE | PAD_CTL_PUE  |
		  PAD_CTL_PUS_100K_DOWN), /* MX6DL_PAD_ENET_RXD0__ENET_RDATA_0 */
	IOMUX_PAD(0x05CC, 0x01FC, 1, 0x081C, 0, PAD_CTL_PKE | PAD_CTL_PUE  |
		  PAD_CTL_PUS_100K_DOWN), /* MX6DL_PAD_ENET_RXD1__ENET_RDATA_1 */
	MX6DL_PAD_ENET_TXD0__ENET_TDATA_0,
	MX6DL_PAD_ENET_TXD1__ENET_TDATA_1,
	MX6DL_PAD_ENET_TX_EN__ENET_TX_EN,
	MX6DL_PAD_GPIO_16__ENET_ANATOP_ETHERNET_REF_OUT,

//	MX6DL_PAD_RGMII_TXC__ENET_RGMII_TXC, This is dangerous once since it's input in AR8030 and output in AR8035
	MX6DL_PAD_RGMII_TXC__GPIO_6_19,
	MX6DL_PAD_RGMII_TD0__ENET_RGMII_TD0,
	MX6DL_PAD_RGMII_TD1__ENET_RGMII_TD1,
	MX6DL_PAD_RGMII_TD2__ENET_RGMII_TD2,
	MX6DL_PAD_RGMII_TD3__ENET_RGMII_TD3,
	MX6DL_PAD_RGMII_TX_CTL__ENET_RGMII_TX_CTL,
	MX6DL_PAD_ENET_REF_CLK__ENET_TX_CLK,
	MX6DL_PAD_RGMII_RXC__ENET_RGMII_RXC,
	IOMUX_PAD(0x0694, 0x02AC, 1, 0x0818, 1, MX6DL_ENET_PAD_CTRL_PD),/*RGMII RD0*/
	IOMUX_PAD(0x0698, 0x02B0, 1, 0x081C, 1, MX6DL_ENET_PAD_CTRL_PD),/*RGMII RD1*/
	/* In RGMII mode RD2 should be '1' to disable the stupid PLL OFF mode */
	IOMUX_PAD(0x069C, 0x02B4, 1, 0x0820, 1, MX6DL_ENET_PAD_CTRL_PD),/*RGMII RD2*/
	IOMUX_PAD(0x06A0, 0x02B8, 1, 0x0824, 1, MX6DL_ENET_PAD_CTRL_PD),/*RGMII RD3*/
	/* In RGMII mode RX_DV should be pulled down for reset strap */
	IOMUX_PAD(0x06A4, 0x02BC, 1, 0x0828, 1, MX6DL_ENET_PAD_CTRL_PD),/*RGMII RXCTL*/
	/* PCI-E Reset */
	MX6DL_PAD_EIM_DA9__GPIO_3_9,
};
static iomux_v3_cfg_t mx6dl_ar8035_phy[] = {
	/* ENET */
	MX6DL_PAD_ENET_MDIO__ENET_MDIO,
	MX6DL_PAD_ENET_MDC__ENET_MDC,
	IOMUX_PAD(0x0650, 0x0268, 5, 0x0000, 0, MX6DL_ENET_PAD_CTRL_PD), /* KEY_ROW4 reset signal */
	
	MX6DL_PAD_DI0_PIN2__GPIO_4_18, /* Interrupt */
	/* RMII */
	IOMUX_PAD(0x05B4, 0x01E4, 1, 0x0828, 0, PAD_CTL_PKE | PAD_CTL_PUE  |
		  PAD_CTL_PUS_100K_DOWN), /* MX6DL_PAD_ENET_CRS_DV__ENET_RX_EN */
	IOMUX_PAD(0x05C8, 0x01F8, 1, 0x0818, 0, PAD_CTL_PKE | PAD_CTL_PUE  |
		  PAD_CTL_PUS_100K_DOWN), /* MX6DL_PAD_ENET_RXD0__ENET_RDATA_0 */
	IOMUX_PAD(0x05CC, 0x01FC, 1, 0x081C, 0, PAD_CTL_PKE | PAD_CTL_PUE  |
		  PAD_CTL_PUS_100K_DOWN), /* MX6DL_PAD_ENET_RXD1__ENET_RDATA_1 */
	MX6DL_PAD_ENET_TXD0__ENET_TDATA_0,
	MX6DL_PAD_ENET_TXD1__ENET_TDATA_1,
	MX6DL_PAD_ENET_TX_EN__ENET_TX_EN,
	MX6DL_PAD_GPIO_16__ENET_ANATOP_ETHERNET_REF_OUT,

	MX6DL_PAD_RGMII_TXC__ENET_RGMII_TXC,
	MX6DL_PAD_RGMII_TD0__ENET_RGMII_TD0,
	MX6DL_PAD_RGMII_TD1__ENET_RGMII_TD1,
	MX6DL_PAD_RGMII_TD2__ENET_RGMII_TD2,
	MX6DL_PAD_RGMII_TD3__ENET_RGMII_TD3,
	MX6DL_PAD_RGMII_TX_CTL__ENET_RGMII_TX_CTL,
	MX6DL_PAD_ENET_REF_CLK__ENET_TX_CLK,
	MX6DL_PAD_RGMII_RXC__ENET_RGMII_RXC,
	IOMUX_PAD(0x0694, 0x02AC, 1, 0x0818, 1, MX6DL_ENET_PAD_CTRL_PD),/*RGMII RD0*/
	IOMUX_PAD(0x0698, 0x02B0, 1, 0x081C, 1, MX6DL_ENET_PAD_CTRL_PD),/*RGMII RD1*/
	/* In RGMII mode RD2 should be '1' to disable the PLL OFF mode */
	MX6DL_PAD_RGMII_RD2__ENET_RGMII_RD2,
	MX6DL_PAD_RGMII_RD3__ENET_RGMII_RD3,
	/* In RGMII mode RX_DV should be pulled down for reset strap */
	IOMUX_PAD(0x06A4, 0x02BC, 1, 0x0828, 1, MX6DL_ENET_PAD_CTRL_PD),/*RGMII RXCTL*/
};


static iomux_v3_cfg_t mx6dl_c1_hdmi_ddc_pads[] = {
	MX6DL_PAD_KEY_COL3__HDMI_TX_DDC_SCL, /* HDMI DDC SCL */
	MX6DL_PAD_KEY_ROW3__HDMI_TX_DDC_SDA, /* HDMI DDC SDA */
};

static iomux_v3_cfg_t mx6dl_c1_i2c2_pads[] = {
	MX6DL_PAD_KEY_COL3__I2C2_SCL,	/* I2C2 SCL */
	MX6DL_PAD_KEY_ROW3__I2C2_SDA,	/* I2C2 SDA */
};

#endif
